rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone can read their own profile
      // Only the user can update their own profile
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAdmin();
    }
    
    // Services collection
    match /services/{serviceId} {
      // Anyone can read services
      allow read: if true;
      // Only admins can create, update, or delete services
      allow create, update, delete: if isAdmin();
    }
    
    // Providers (dentists) collection
    match /providers/{providerId} {
      // Anyone can read providers
      allow read: if true;
      // Only admins can create, update, or delete providers
      allow create, update, delete: if isAdmin();
    }
    
    // Provider schedules subcollection
    match /providers/{providerId}/schedules/{scheduleId} {
      // Anyone can read schedules
      allow read: if true;
      // Only admins can create, update, or delete schedules
      allow create, update, delete: if isAdmin();
    }
    
    // Appointments collection
    match /appointments/{appointmentId} {
      // Users can read their own appointments, admins can read all
      allow read: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
      // Users can create appointments for themselves
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Users can update their own appointments (for cancellation), admins can update all
      allow update: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
      // Only admins can delete appointments
      allow delete: if isAdmin();
    }
    
    // Contact inquiries collection
    match /contactInquiries/{inquiryId} {
      // Users can create contact inquiries
      allow create: if true;
      // Only admins can read, update, or delete inquiries
      allow read, update, delete: if isAdmin();
    }
  }
}
